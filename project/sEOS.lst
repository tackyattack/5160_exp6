C51 COMPILER V6.02  SEOS                                                                   11/21/2019 07:15:58 PAGE 1   


C51 COMPILER V6.02, COMPILATION OF MODULE SEOS
OBJECT MODULE PLACED IN .\sEOS.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\source\sEOS.c DEBUG OBJECTEXTEND PRINT(.\sEOS.lst) OBJECT(.\sEOS.obj) 

stmt level    source

   1          #include "sEOS.h"
   2          #include "Directory_Functions_struct.h"
   3          #include "UART.h"
   4          #include "file_system.h"
   5          #include "player.h"
   6          #include "LED_Control.h"
   7          #include <stdio.h>
   8          
   9          extern uint8_t xdata buf1[512];
  10          extern uint8_t xdata buf2[512];
  11          
  12          typedef enum {os_init, os_idle, print_buffer, recv_input, run_print_dir_task, run_read_dir_entry_task,
  13                        start_song, play_song_task} seos_state_t;
  14          seos_state_t seos_state;
  15          
  16          uint16_t  temp16, cwd_entries;
  17          uint8_t   temp8;
  18          uint32_t  entry_num;
  19          uint32_t  cwd, clus;
  20          uint8_t   tens = 0;
  21          
  22          bit print_dir_task_running = 0;
  23          bit read_dir_entry_task_running = 0;
  24          
  25          void os_loop()
  26          {
  27   1        switch(seos_state)
  28   1        {
  29   2          case os_init:
  30   2            cwd = Export_Drive_values()->FirstRootDirSec; // start out at root directory
  31   2            print_directory_init(cwd);
  32   2            print_dir_task_running=1;
  33   2            entry_num = 0;
  34   2            seos_state = os_idle;
  35   2            break;
  36   2          case os_idle:
  37   2            LED_number(1);
  38   2            temp8 = UART_Receive_Non_Blocking();
  39   2            if(temp8 != 0)
  40   2            {
  41   3              seos_state = recv_input;
  42   3            }
  43   2            if(print_dir_task_running) seos_state = run_print_dir_task;
  44   2            if(read_dir_entry_task_running) seos_state = run_read_dir_entry_task;
  45   2            if(get_directory_print_buffer_pos() > 0)
  46   2            {
  47   3              seos_state = print_buffer;
  48   3            }
  49   2            break;
  50   2          case recv_input:
  51   2            LED_number(2);
  52   2            if(temp8 == '\r')
  53   2            {
  54   3              if(entry_num <= cwd_entries)
  55   3              {
C51 COMPILER V6.02  SEOS                                                                   11/21/2019 07:15:58 PAGE 2   

  56   4              read_dir_entry_init(entry_num, cwd);
  57   4              read_dir_entry_task_running = 1;
  58   4              }
  59   3              else
  60   3              {
  61   4                set_directory_print_buffer_pos
  62   4                (
  63   4                  get_directory_print_buffer_pos()
  64   4                  + sprintf(get_directory_print_buffer()+get_directory_print_buffer_pos(), "\nError: invalid ent
             -ry choice. Try again:\n")
  65   4                );
  66   4              }
  67   3              tens = 0;
  68   3              seos_state = os_idle;
  69   3              entry_num = 0;
  70   3            }
  71   2            else if((temp8 >= '0') && (temp8 <= '9'))
  72   2            {
  73   3              putchar(temp8);
  74   3              entry_num = temp8-'0' + entry_num*10;
  75   3              seos_state = os_idle;
  76   3            }
  77   2            else
  78   2            {
  79   3              seos_state = os_idle;
  80   3            }
  81   2            break;
  82   2          case print_buffer:
  83   2            LED_number(3);
  84   2            putchar(get_directory_print_buffer()[temp16]);
  85   2            temp16++;
  86   2            if(temp16 > get_directory_print_buffer_pos())
  87   2            {
  88   3              set_directory_print_buffer_pos(0);
  89   3              temp16=0;
  90   3            }
  91   2            seos_state = os_idle;
  92   2            break;
  93   2          case run_print_dir_task:
  94   2            LED_number(4);
  95   2            if(print_directory_task(&cwd_entries) == TASK_RUNNING)
  96   2            {
  97   3              temp16 = 0;
  98   3              seos_state = print_buffer;
  99   3            }
 100   2            else
 101   2            {
 102   3              print_dir_task_running = 0;
 103   3              seos_state = print_buffer;
 104   3              set_directory_print_buffer_pos
 105   3              (
 106   3                get_directory_print_buffer_pos()
 107   3                + sprintf(get_directory_print_buffer()+get_directory_print_buffer_pos(), "\nEnter an entry numbe
             -r:\n")
 108   3              );
 109   3            }
 110   2            break;
 111   2          case run_read_dir_entry_task:
 112   2            LED_number(5);
 113   2            if(read_dir_entry_task(&clus) == TASK_RUNNING)
 114   2            {
 115   3              // go back to idle since we're still going
C51 COMPILER V6.02  SEOS                                                                   11/21/2019 07:15:58 PAGE 3   

 116   3              seos_state = os_idle;
 117   3            }
 118   2            else
 119   2            {
 120   3              read_dir_entry_task_running = 0;
 121   3              if(clus & directory_bit)
 122   3              {
 123   4                seos_state = os_idle;
 124   4                clus &= 0x0FFFFFFF; // mask off upper four bits to print another directory
 125   4                cwd = first_sector(clus);
 126   4                print_directory_init(cwd);
 127   4                print_dir_task_running=1;
 128   4              }
 129   3              else
 130   3              {
 131   4                seos_state = start_song;
 132   4              }
 133   3            }
 134   2            break;
 135   2          case start_song:
 136   2            LED_number(6);
 137   2            init_player(clus);
 138   2            seos_state = play_song_task;
 139   2            break;
 140   2          case play_song_task:
 141   2            LED_number(7);
 142   2            if(player_state_machine_runner() == PLAYER_RUNNING)
 143   2            {
 144   3              seos_state = play_song_task;
 145   3            }
 146   2            else
 147   2            {
 148   3              print_directory_init(cwd);
 149   3              print_dir_task_running=1;
 150   3              seos_state = os_idle;
 151   3            }
 152   2            break;
 153   2        }
 154   1      }
 155          
 156          void sEOS_ISR(void) interrupt 5 using 1
 157          {
 158   1        TF2 = 0; // clear timer flag that caused this interrupt
 159   1        os_loop();
 160   1      }
 161          
 162          void sEOS_init(uint8_t interval_ms)
 163          {
 164   1        uint16_t preload;
 165   1        seos_state = os_init;
 166   1        //while(1) os_loop();
 167   1      
 168   1        T2CON=0;
 169   1        preload=(65536-((OSC_FREQ*interval_ms)/(OSC_PER_INST*1000UL)));
 170   1        RCAP2H=(uint8_t)preload/256;
 171   1        RCAP2L=(uint8_t)preload%256;
 172   1        TF2=0; // Clear overflow
 173   1        ET2=1; // Enable Timer 2 interrupt
 174   1        EA=1;  // Set Global Interrupt Enable
 175   1        TR2=1; // Start Timer Running
 176   1      }

C51 COMPILER V6.02  SEOS                                                                   11/21/2019 07:15:58 PAGE 4   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    688    ----
   CONSTANT SIZE    =     67    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     19    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
